TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 53 files
Detected 40 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: src/kitti_eval/flow_tool/flowlib.py
--------------------------------------------------------------------------------
src/kitti_eval/flow_tool/flowlib.py:160:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: src/utils/utils.py
--------------------------------------------------------------------------------
src/utils/utils.py:786:16: ERROR: Using member tf.contrib.distributions.percentile in deprecated module tf.contrib. tf.contrib.distributions.percentile cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
src/utils/utils.py:1042:21: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
src/utils/utils.py:1078:19: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: src/utils/.ipynb_checkpoints/utils-checkpoint.py
--------------------------------------------------------------------------------
src/utils/.ipynb_checkpoints/utils-checkpoint.py:786:16: ERROR: Using member tf.contrib.distributions.percentile in deprecated module tf.contrib. tf.contrib.distributions.percentile cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
src/utils/.ipynb_checkpoints/utils-checkpoint.py:1042:21: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
src/utils/.ipynb_checkpoints/utils-checkpoint.py:1078:19: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: src/data_preparation/kitti_data_prepare.py
--------------------------------------------------------------------------------
src/data_preparation/kitti_data_prepare.py:77:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: src/data_preparation/.ipynb_checkpoints/kitti_data_prepare-checkpoint.py
--------------------------------------------------------------------------------
src/data_preparation/.ipynb_checkpoints/kitti_data_prepare-checkpoint.py:77:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: src/nets/depth_net_origin.py
--------------------------------------------------------------------------------
src/nets/depth_net_origin.py:341:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/nets/depth_net_origin.py:371:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/nets/depth_net_origin.py:585:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/nets/depth_net_origin.py:594:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/nets/depth_net_origin.py:828:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: src/nets/.ipynb_checkpoints/depth_net_origin-checkpoint.py
--------------------------------------------------------------------------------
src/nets/.ipynb_checkpoints/depth_net_origin-checkpoint.py:341:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/nets/.ipynb_checkpoints/depth_net_origin-checkpoint.py:371:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/nets/.ipynb_checkpoints/depth_net_origin-checkpoint.py:585:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/nets/.ipynb_checkpoints/depth_net_origin-checkpoint.py:594:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/nets/.ipynb_checkpoints/depth_net_origin-checkpoint.py:828:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: src/test/test_kitti_depth.py
--------------------------------------------------------------------------------
src/test/test_kitti_depth.py:83:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: src/model/model_3frames_origin.py
--------------------------------------------------------------------------------
src/model/model_3frames_origin.py:110:55: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/model_3frames_origin.py:125:54: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/model_3frames_origin.py:463:44: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/model_3frames_origin.py:465:50: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: src/model/undpflow_model.py
--------------------------------------------------------------------------------
src/model/undpflow_model.py:366:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: src/model/model_3frames.py
--------------------------------------------------------------------------------
src/model/model_3frames.py:118:55: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/model_3frames.py:133:54: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/model_3frames.py:418:44: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/model_3frames.py:420:50: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: src/model/model_5frames.py
--------------------------------------------------------------------------------
src/model/model_5frames.py:124:55: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/model_5frames.py:139:54: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/model_5frames.py:617:44: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/model_5frames.py:619:50: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: src/model/.ipynb_checkpoints/model_3frames-checkpoint.py
--------------------------------------------------------------------------------
src/model/.ipynb_checkpoints/model_3frames-checkpoint.py:118:55: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/.ipynb_checkpoints/model_3frames-checkpoint.py:133:54: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/.ipynb_checkpoints/model_3frames-checkpoint.py:418:44: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
src/model/.ipynb_checkpoints/model_3frames-checkpoint.py:420:50: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
--------------------------------------------------------------------------------
File: src/model/.ipynb_checkpoints/undpflow_model-checkpoint.py
--------------------------------------------------------------------------------
src/model/.ipynb_checkpoints/undpflow_model-checkpoint.py:358:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: src/data_loader/test_data_loader.py
--------------------------------------------------------------------------------
src/data_loader/test_data_loader.py:32:32: ERROR: Using member tf.contrib.data.batch_and_drop_remainder in deprecated module tf.contrib. tf.contrib.data.batch_and_drop_remainder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
src/data_loader/test_data_loader.py:34:19: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: 'src'
================================================================================
--------------------------------------------------------------------------------
Processing file 'src/__init__.py'
 outputting to 'srcv2/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/main.py'
 outputting to 'srcv2/main.py'
--------------------------------------------------------------------------------

113:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/depth_evaluation_utils.py'
 outputting to 'srcv2/kitti_eval/depth_evaluation_utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/__init__.py'
 outputting to 'srcv2/kitti_eval/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/eval_depth.py'
 outputting to 'srcv2/kitti_eval/eval_depth.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/.ipynb_checkpoints/eval_depth-checkpoint.py'
 outputting to 'srcv2/kitti_eval/.ipynb_checkpoints/eval_depth-checkpoint.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/utils/evaluate_kitti.py'
 outputting to 'srcv2/kitti_eval/utils/evaluate_kitti.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/utils/evaluation_utils.py'
 outputting to 'srcv2/kitti_eval/utils/evaluation_utils.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/tools/compatibility/ast_edits.py", line 916, in update_string_pasta
    t = pasta.parse(text)
  File "/usr/local/lib/python3.6/dist-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/usr/local/lib/python3.6/dist-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "<unknown>", line 104
    print num_probs, 'files missing'
                  ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(num_probs, 'files missing')?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/kitti/kitti_odom_loader.py'
 outputting to 'srcv2/kitti_eval/kitti/kitti_odom_loader.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/kitti/__init__.py'
 outputting to 'srcv2/kitti_eval/kitti/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/kitti/kitti_raw_loader.py'
 outputting to 'srcv2/kitti_eval/kitti/kitti_raw_loader.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/flow_tool/pfm.py'
 outputting to 'srcv2/kitti_eval/flow_tool/pfm.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/flow_tool/png.py'
 outputting to 'srcv2/kitti_eval/flow_tool/png.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/kitti_eval/flow_tool/flowlib.py'
 outputting to 'srcv2/kitti_eval/flow_tool/flowlib.py'
--------------------------------------------------------------------------------

133:45: INFO: Added keywords to args of function 'tf.shape'
137:30: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
139:19: INFO: Added keywords to args of function 'tf.reduce_max'
140:18: INFO: Added keywords to args of function 'tf.reduce_sum'
143:11: INFO: Renamed 'tf.mod' to 'tf.math.mod'
160:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/.ipynb_checkpoints/main-checkpoint.py'
 outputting to 'srcv2/.ipynb_checkpoints/main-checkpoint.py'
--------------------------------------------------------------------------------

113:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/utils/optical_flow_warp_old.py'
 outputting to 'srcv2/utils/optical_flow_warp_old.py'
--------------------------------------------------------------------------------

39:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
40:18: INFO: Added keywords to args of function 'tf.transpose'
48:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
50:24: INFO: Added keywords to args of function 'tf.shape'
51:21: INFO: Added keywords to args of function 'tf.shape'
52:20: INFO: Added keywords to args of function 'tf.shape'
53:23: INFO: Added keywords to args of function 'tf.shape'
62:28: INFO: Added keywords to args of function 'tf.shape'
63:28: INFO: Added keywords to args of function 'tf.shape'
113:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
121:16: INFO: Added keywords to args of function 'tf.transpose'
130:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
131:24: INFO: Added keywords to args of function 'tf.shape'
132:21: INFO: Added keywords to args of function 'tf.shape'
133:20: INFO: Added keywords to args of function 'tf.shape'
134:27: INFO: Added keywords to args of function 'tf.shape'
164:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
170:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
170:29: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/utils/__init__.py'
 outputting to 'srcv2/utils/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/utils/utils.py'
 outputting to 'srcv2/utils/utils.py'
--------------------------------------------------------------------------------

11:18: INFO: Added keywords to args of function 'tf.shape'
26:15: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
28:15: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
87:15: INFO: Added keywords to args of function 'tf.norm'
89:30: INFO: Added keywords to args of function 'tf.norm'
92:9: INFO: Added keywords to args of function 'tf.reduce_sum'
92:36: INFO: Added keywords to args of function 'tf.reduce_sum'
121:19: INFO: Added keywords to args of function 'tf.reduce_mean'
133:11: INFO: Added keywords to args of function 'tf.reduce_sum'
168:15: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
171:23: INFO: Added keywords to args of function 'tf.transpose'
205:8: INFO: Added keywords to args of function 'tf.shape'
286:27: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
312:11: INFO: Added keywords to args of function 'tf.transpose'
326:19: INFO: Added keywords to args of function 'tf.transpose'
380:23: INFO: Added keywords to args of function 'tf.transpose'
401:14: INFO: Added keywords to args of function 'tf.transpose'
409:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

409:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
424:24: INFO: Added keywords to args of function 'tf.shape'
425:24: INFO: Added keywords to args of function 'tf.shape'
618:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
619:18: INFO: Added keywords to args of function 'tf.transpose'
642:12: INFO: Added keywords to args of function 'tf.transpose'
661:12: INFO: Added keywords to args of function 'tf.transpose'
685:12: INFO: Added keywords to args of function 'tf.shape'
743:11: INFO: Added keywords to args of function 'tf.shape'
758:19: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
767:18: INFO: Added keywords to args of function 'tf.transpose'
772:8: INFO: Added keywords to args of function 'tf.transpose'
776:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
781:8: INFO: Added keywords to args of function 'tf.reduce_sum'
785:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
786:16: ERROR: Using member tf.contrib.distributions.percentile in deprecated module tf.contrib. tf.contrib.distributions.percentile cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
806:23: INFO: Added keywords to args of function 'tf.transpose'
863:12: INFO: Added keywords to args of function 'tf.transpose'
882:12: INFO: Added keywords to args of function 'tf.transpose'
906:12: INFO: Added keywords to args of function 'tf.shape'
964:11: INFO: Added keywords to args of function 'tf.shape'
978:19: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
989:23: INFO: Added keywords to args of function 'tf.transpose'
1011:17: INFO: Added keywords to args of function 'tf.reduce_mean'
1012:56: INFO: Added keywords to args of function 'tf.reduce_mean'
1014:17: INFO: Added keywords to args of function 'tf.reduce_mean'
1015:56: INFO: Added keywords to args of function 'tf.reduce_mean'
1019:8: INFO: Added keywords to args of function 'tf.transpose'
1021:8: INFO: Added keywords to args of function 'tf.transpose'
1023:35: INFO: Added keywords to args of function 'tf.transpose'
1024:8: INFO: Added keywords to args of function 'tf.reduce_sum'
1028:14: INFO: Renamed 'tf.svd' to 'tf.linalg.svd'
1042:21: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
1044:17: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
1069:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
1071:26: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
1078:19: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/utils/loss_utils.py'
 outputting to 'srcv2/utils/loss_utils.py'
--------------------------------------------------------------------------------

16:11: INFO: Added keywords to args of function 'tf.reduce_sum'
16:51: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
16:63: INFO: Added keywords to args of function 'tf.size'
21:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
27:22: INFO: Added keywords to args of function 'tf.nn.conv2d'
27:22: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
36:23: INFO: Added keywords to args of function 'tf.reduce_sum'
47:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
48:16: INFO: Added keywords to args of function 'tf.shape'
53:17: INFO: Added keywords to args of function 'tf.pad'
68:10: INFO: Added keywords to args of function 'tf.reduce_sum'
70:25: INFO: Added keywords to args of function 'tf.reduce_sum'
72:11: INFO: Added keywords to args of function 'tf.reduce_mean'
84:11: INFO: Added keywords to args of function 'tf.reduce_sum'
84:48: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
84:60: INFO: Added keywords to args of function 'tf.size'
96:11: INFO: Added keywords to args of function 'tf.reduce_sum'
97:35: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
97:47: INFO: Added keywords to args of function 'tf.size'
111:31: INFO: Added keywords to args of function 'tf.reduce_mean'
113:31: INFO: Added keywords to args of function 'tf.reduce_mean'
120:12: INFO: Added keywords to args of function 'tf.reduce_mean'
121:11: INFO: Added keywords to args of function 'tf.reduce_mean'
136:31: INFO: Added keywords to args of function 'tf.reduce_mean'
138:31: INFO: Added keywords to args of function 'tf.reduce_mean'
145:12: INFO: Added keywords to args of function 'tf.reduce_mean'
146:11: INFO: Added keywords to args of function 'tf.reduce_mean'
160:23: INFO: Added keywords to args of function 'tf.reduce_mean'
161:23: INFO: Added keywords to args of function 'tf.reduce_mean'
163:11: INFO: Added keywords to args of function 'tf.reduce_mean'
163:54: INFO: Added keywords to args of function 'tf.reduce_mean'
182:24: INFO: Added keywords to args of function 'tf.reduce_mean'
183:24: INFO: Added keywords to args of function 'tf.reduce_mean'
187:11: INFO: Added keywords to args of function 'tf.reduce_mean'
187:47: INFO: Added keywords to args of function 'tf.reduce_mean'
194:8: INFO: Added keywords to args of function 'tf.pad'
195:8: INFO: Added keywords to args of function 'tf.pad'
227:48: INFO: Added keywords to args of function 'tf.shape'
238:11: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/utils/optical_flow_warp_fwd.py'
 outputting to 'srcv2/utils/optical_flow_warp_fwd.py'
--------------------------------------------------------------------------------

45:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
46:18: INFO: Added keywords to args of function 'tf.transpose'
54:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
56:24: INFO: Added keywords to args of function 'tf.shape'
57:21: INFO: Added keywords to args of function 'tf.shape'
58:20: INFO: Added keywords to args of function 'tf.shape'
59:23: INFO: Added keywords to args of function 'tf.shape'
68:28: INFO: Added keywords to args of function 'tf.shape'
69:28: INFO: Added keywords to args of function 'tf.shape'
114:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
117:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
120:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
123:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
137:33: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
138:23: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
142:29: INFO: Renamed 'tf.scatter_add' to 'tf.compat.v1.scatter_add'
143:29: INFO: Renamed 'tf.scatter_add' to 'tf.compat.v1.scatter_add'
144:29: INFO: Renamed 'tf.scatter_add' to 'tf.compat.v1.scatter_add'
145:29: INFO: Renamed 'tf.scatter_add' to 'tf.compat.v1.scatter_add'
159:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
167:16: INFO: Added keywords to args of function 'tf.transpose'
176:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
177:24: INFO: Added keywords to args of function 'tf.shape'
178:21: INFO: Added keywords to args of function 'tf.shape'
179:20: INFO: Added keywords to args of function 'tf.shape'
180:27: INFO: Added keywords to args of function 'tf.shape'
208:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
215:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
215:29: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
227:11: INFO: Added keywords to args of function 'tf.reduce_mean'
229:15: INFO: Added keywords to args of function 'tf.gradients'
231:13: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/utils/.ipynb_checkpoints/optical_flow_warp_fwd-checkpoint.py'
 outputting to 'srcv2/utils/.ipynb_checkpoints/optical_flow_warp_fwd-checkpoint.py'
--------------------------------------------------------------------------------

45:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
46:18: INFO: Added keywords to args of function 'tf.transpose'
54:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
56:24: INFO: Added keywords to args of function 'tf.shape'
57:21: INFO: Added keywords to args of function 'tf.shape'
58:20: INFO: Added keywords to args of function 'tf.shape'
59:23: INFO: Added keywords to args of function 'tf.shape'
68:28: INFO: Added keywords to args of function 'tf.shape'
69:28: INFO: Added keywords to args of function 'tf.shape'
114:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
117:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
120:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
123:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
137:33: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
138:23: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
142:29: INFO: Renamed 'tf.scatter_add' to 'tf.compat.v1.scatter_add'
143:29: INFO: Renamed 'tf.scatter_add' to 'tf.compat.v1.scatter_add'
144:29: INFO: Renamed 'tf.scatter_add' to 'tf.compat.v1.scatter_add'
145:29: INFO: Renamed 'tf.scatter_add' to 'tf.compat.v1.scatter_add'
159:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
167:16: INFO: Added keywords to args of function 'tf.transpose'
176:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
177:24: INFO: Added keywords to args of function 'tf.shape'
178:21: INFO: Added keywords to args of function 'tf.shape'
179:20: INFO: Added keywords to args of function 'tf.shape'
180:27: INFO: Added keywords to args of function 'tf.shape'
208:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
215:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
215:29: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
227:11: INFO: Added keywords to args of function 'tf.reduce_mean'
229:15: INFO: Added keywords to args of function 'tf.gradients'
231:13: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/utils/.ipynb_checkpoints/optical_flow_warp_old-checkpoint.py'
 outputting to 'srcv2/utils/.ipynb_checkpoints/optical_flow_warp_old-checkpoint.py'
--------------------------------------------------------------------------------

39:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
40:18: INFO: Added keywords to args of function 'tf.transpose'
48:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
50:24: INFO: Added keywords to args of function 'tf.shape'
51:21: INFO: Added keywords to args of function 'tf.shape'
52:20: INFO: Added keywords to args of function 'tf.shape'
53:23: INFO: Added keywords to args of function 'tf.shape'
62:28: INFO: Added keywords to args of function 'tf.shape'
63:28: INFO: Added keywords to args of function 'tf.shape'
113:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
121:16: INFO: Added keywords to args of function 'tf.transpose'
130:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
131:24: INFO: Added keywords to args of function 'tf.shape'
132:21: INFO: Added keywords to args of function 'tf.shape'
133:20: INFO: Added keywords to args of function 'tf.shape'
134:27: INFO: Added keywords to args of function 'tf.shape'
164:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
170:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
170:29: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/utils/.ipynb_checkpoints/utils-checkpoint.py'
 outputting to 'srcv2/utils/.ipynb_checkpoints/utils-checkpoint.py'
--------------------------------------------------------------------------------

11:18: INFO: Added keywords to args of function 'tf.shape'
26:15: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
28:15: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
87:15: INFO: Added keywords to args of function 'tf.norm'
89:30: INFO: Added keywords to args of function 'tf.norm'
92:9: INFO: Added keywords to args of function 'tf.reduce_sum'
92:36: INFO: Added keywords to args of function 'tf.reduce_sum'
121:19: INFO: Added keywords to args of function 'tf.reduce_mean'
133:11: INFO: Added keywords to args of function 'tf.reduce_sum'
168:15: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
171:23: INFO: Added keywords to args of function 'tf.transpose'
205:8: INFO: Added keywords to args of function 'tf.shape'
286:27: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
312:11: INFO: Added keywords to args of function 'tf.transpose'
326:19: INFO: Added keywords to args of function 'tf.transpose'
380:23: INFO: Added keywords to args of function 'tf.transpose'
401:14: INFO: Added keywords to args of function 'tf.transpose'
409:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

409:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
424:24: INFO: Added keywords to args of function 'tf.shape'
425:24: INFO: Added keywords to args of function 'tf.shape'
618:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
619:18: INFO: Added keywords to args of function 'tf.transpose'
642:12: INFO: Added keywords to args of function 'tf.transpose'
661:12: INFO: Added keywords to args of function 'tf.transpose'
685:12: INFO: Added keywords to args of function 'tf.shape'
743:11: INFO: Added keywords to args of function 'tf.shape'
758:19: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
767:18: INFO: Added keywords to args of function 'tf.transpose'
772:8: INFO: Added keywords to args of function 'tf.transpose'
776:16: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
781:8: INFO: Added keywords to args of function 'tf.reduce_sum'
785:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
786:16: ERROR: Using member tf.contrib.distributions.percentile in deprecated module tf.contrib. tf.contrib.distributions.percentile cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
806:23: INFO: Added keywords to args of function 'tf.transpose'
863:12: INFO: Added keywords to args of function 'tf.transpose'
882:12: INFO: Added keywords to args of function 'tf.transpose'
906:12: INFO: Added keywords to args of function 'tf.shape'
964:11: INFO: Added keywords to args of function 'tf.shape'
978:19: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
989:23: INFO: Added keywords to args of function 'tf.transpose'
1011:17: INFO: Added keywords to args of function 'tf.reduce_mean'
1012:56: INFO: Added keywords to args of function 'tf.reduce_mean'
1014:17: INFO: Added keywords to args of function 'tf.reduce_mean'
1015:56: INFO: Added keywords to args of function 'tf.reduce_mean'
1019:8: INFO: Added keywords to args of function 'tf.transpose'
1021:8: INFO: Added keywords to args of function 'tf.transpose'
1023:35: INFO: Added keywords to args of function 'tf.transpose'
1024:8: INFO: Added keywords to args of function 'tf.reduce_sum'
1028:14: INFO: Renamed 'tf.svd' to 'tf.linalg.svd'
1042:21: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
1044:17: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
1069:17: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
1071:26: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
1078:19: ERROR: Using member tf.contrib.framework.list_variables in deprecated module tf.contrib. tf.contrib.framework.list_variables cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/data_preparation/kitti_data_prepare.py'
 outputting to 'srcv2/data_preparation/kitti_data_prepare.py'
--------------------------------------------------------------------------------

77:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/data_preparation/airsim_data_prepare.py'
 outputting to 'srcv2/data_preparation/airsim_data_prepare.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/data_preparation/.ipynb_checkpoints/kitti_data_prepare-checkpoint.py'
 outputting to 'srcv2/data_preparation/.ipynb_checkpoints/kitti_data_prepare-checkpoint.py'
--------------------------------------------------------------------------------

77:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/data_preparation/kitti/kitti_odom_loader.py'
 outputting to 'srcv2/data_preparation/kitti/kitti_odom_loader.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/data_preparation/kitti/__init__.py'
 outputting to 'srcv2/data_preparation/kitti/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/data_preparation/kitti/kitti_raw_loader.py'
 outputting to 'srcv2/data_preparation/kitti/kitti_raw_loader.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/data_preparation/kitti/.ipynb_checkpoints/kitti_raw_loader-checkpoint.py'
 outputting to 'srcv2/data_preparation/kitti/.ipynb_checkpoints/kitti_raw_loader-checkpoint.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/nets/depth_net.py'
 outputting to 'srcv2/nets/depth_net.py'
--------------------------------------------------------------------------------

52:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
55:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
56:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
64:29: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
78:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
84:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
113:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
147:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
177:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
179:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
180:13: INFO: Added keywords to args of function 'tf.shape'
181:12: INFO: Added keywords to args of function 'tf.transpose'
181:28: INFO: Added keywords to args of function 'tf.convert_to_tensor'
182:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
183:13: INFO: Added keywords to args of function 'tf.shape'
188:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
196:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
206:8: INFO: Added keywords to args of function 'tf.pad'
215:11: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/nets/pose_net_origin.py'
 outputting to 'srcv2/nets/pose_net_origin.py'
--------------------------------------------------------------------------------

8:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
12:48: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

52:23: INFO: Added keywords to args of function 'tf.reduce_mean'
75:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
79:48: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

112:23: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/nets/__init__.py'
 outputting to 'srcv2/nets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/nets/pose_net.py'
 outputting to 'srcv2/nets/pose_net.py'
--------------------------------------------------------------------------------

8:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
13:48: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

52:23: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/nets/flow_net.py'
 outputting to 'srcv2/nets/flow_net.py'
--------------------------------------------------------------------------------

23:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
26:36: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

46:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
56:19: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
65:19: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
74:19: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
84:19: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
95:24: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
96:24: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
97:24: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
98:24: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
104:15: INFO: Added keywords to args of function 'tf.pad'
109:16: INFO: Added keywords to args of function 'tf.reduce_mean'
118:32: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

159:32: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/nets/flow_net_origin.py'
 outputting to 'srcv2/nets/flow_net_origin.py'
--------------------------------------------------------------------------------

23:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
26:36: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

47:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
57:19: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
66:19: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
75:19: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
84:19: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
95:24: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
96:24: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
97:24: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
98:24: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
105:15: INFO: Added keywords to args of function 'tf.pad'
110:16: INFO: Added keywords to args of function 'tf.reduce_mean'
120:32: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

162:32: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/nets/depth_net_origin.py'
 outputting to 'srcv2/nets/depth_net_origin.py'
--------------------------------------------------------------------------------

35:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
41:48: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

92:23: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
104:23: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
115:23: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
157:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
175:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
179:12: INFO: Added keywords to args of function 'tf.nn.max_pool'
179:12: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
179:12: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
205:10: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

219:16: INFO: Added keywords to args of function 'tf.pad'
230:16: INFO: Added keywords to args of function 'tf.pad'
234:22: INFO: Added keywords to args of function 'tf.pad'
249:16: INFO: Added keywords to args of function 'tf.pad'
252:22: INFO: Added keywords to args of function 'tf.pad'
265:16: INFO: Added keywords to args of function 'tf.pad'
268:22: INFO: Added keywords to args of function 'tf.pad'
277:18: INFO: Added keywords to args of function 'tf.pad'
280:22: INFO: Added keywords to args of function 'tf.pad'
293:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
299:27: INFO: Added keywords to args of function 'tf.nn.max_pool'
299:27: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
299:27: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
317:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
338:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
341:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
341:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
343:40: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
343:40: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
345:25: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
346:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
347:15: INFO: Added keywords to args of function 'tf.nn.conv2d'
347:15: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
352:9: INFO: Renamed 'tf.layers.batch_normalization' to 'tf.compat.v1.layers.batch_normalization'
371:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
371:15: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
379:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
385:48: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

452:14: INFO: Added keywords to args of function 'tf.shape'
465:10: INFO: Added keywords to args of function 'tf.pad'
501:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
504:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
505:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
512:29: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
527:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
533:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
557:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
559:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
559:54: INFO: Added keywords to args of function 'tf.shape'
560:12: INFO: Added keywords to args of function 'tf.transpose'
560:28: INFO: Added keywords to args of function 'tf.convert_to_tensor'
561:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
561:54: INFO: Added keywords to args of function 'tf.shape'
565:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
572:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
579:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
585:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
585:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
586:40: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
586:40: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
587:16: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
587:16: INFO: Renamed keyword argument for tf.nn.depthwise_conv2d from rate to dilations
594:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
594:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
595:44: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
595:44: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
596:20: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
596:20: INFO: Renamed keyword argument for tf.nn.depthwise_conv2d from rate to dilations
603:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
606:26: INFO: Added keywords to args of function 'tf.convert_to_tensor'
606:48: INFO: Added keywords to args of function 'tf.shape'
606:64: INFO: Added keywords to args of function 'tf.shape'
612:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
619:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
630:45: INFO: Added keywords to args of function 'tf.convert_to_tensor'
630:67: INFO: Added keywords to args of function 'tf.shape'
638:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
675:10: INFO: Added keywords to args of function 'tf.pad'
684:11: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
700:11: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
735:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
738:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
739:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
746:29: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
761:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
767:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
791:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
826:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
828:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
828:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
829:36: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
829:36: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
830:15: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
830:15: INFO: Renamed keyword argument for tf.nn.depthwise_conv2d from rate to dilations
835:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
882:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
885:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
886:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
893:29: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
908:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
914:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/nets/.ipynb_checkpoints/__init__-checkpoint.py'
 outputting to 'srcv2/nets/.ipynb_checkpoints/__init__-checkpoint.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/nets/.ipynb_checkpoints/pose_net-checkpoint.py'
 outputting to 'srcv2/nets/.ipynb_checkpoints/pose_net-checkpoint.py'
--------------------------------------------------------------------------------

8:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
12:46: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

52:23: INFO: Added keywords to args of function 'tf.reduce_mean'
70:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
74:46: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

105:23: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/nets/.ipynb_checkpoints/depth_net-checkpoint.py'
 outputting to 'srcv2/nets/.ipynb_checkpoints/depth_net-checkpoint.py'
--------------------------------------------------------------------------------

52:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
55:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
56:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
64:29: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
78:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
84:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
113:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
147:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
177:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
179:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
180:13: INFO: Added keywords to args of function 'tf.shape'
181:12: INFO: Added keywords to args of function 'tf.transpose'
181:28: INFO: Added keywords to args of function 'tf.convert_to_tensor'
182:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
183:13: INFO: Added keywords to args of function 'tf.shape'
192:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
200:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
210:8: INFO: Added keywords to args of function 'tf.pad'
219:11: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/nets/.ipynb_checkpoints/depth_net_origin-checkpoint.py'
 outputting to 'srcv2/nets/.ipynb_checkpoints/depth_net_origin-checkpoint.py'
--------------------------------------------------------------------------------

35:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
41:48: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

92:23: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
104:23: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
115:23: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
157:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
175:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
179:12: INFO: Added keywords to args of function 'tf.nn.max_pool'
179:12: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
179:12: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
205:10: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

219:16: INFO: Added keywords to args of function 'tf.pad'
230:16: INFO: Added keywords to args of function 'tf.pad'
234:22: INFO: Added keywords to args of function 'tf.pad'
249:16: INFO: Added keywords to args of function 'tf.pad'
252:22: INFO: Added keywords to args of function 'tf.pad'
265:16: INFO: Added keywords to args of function 'tf.pad'
268:22: INFO: Added keywords to args of function 'tf.pad'
277:18: INFO: Added keywords to args of function 'tf.pad'
280:22: INFO: Added keywords to args of function 'tf.pad'
293:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
299:27: INFO: Added keywords to args of function 'tf.nn.max_pool'
299:27: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
299:27: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
317:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
338:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
341:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
341:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
343:40: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
343:40: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
345:25: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
346:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
347:15: INFO: Added keywords to args of function 'tf.nn.conv2d'
347:15: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
352:9: INFO: Renamed 'tf.layers.batch_normalization' to 'tf.compat.v1.layers.batch_normalization'
371:15: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
371:15: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
379:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
385:48: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

452:14: INFO: Added keywords to args of function 'tf.shape'
465:10: INFO: Added keywords to args of function 'tf.pad'
501:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
504:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
505:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
512:29: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
527:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
533:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
557:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
559:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
559:54: INFO: Added keywords to args of function 'tf.shape'
560:12: INFO: Added keywords to args of function 'tf.transpose'
560:28: INFO: Added keywords to args of function 'tf.convert_to_tensor'
561:32: INFO: Added keywords to args of function 'tf.convert_to_tensor'
561:54: INFO: Added keywords to args of function 'tf.shape'
565:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
572:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
579:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
585:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
585:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
586:40: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
586:40: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
587:16: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
587:16: INFO: Renamed keyword argument for tf.nn.depthwise_conv2d from rate to dilations
594:20: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
594:20: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
595:44: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
595:44: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
596:20: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
596:20: INFO: Renamed keyword argument for tf.nn.depthwise_conv2d from rate to dilations
603:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
606:26: INFO: Added keywords to args of function 'tf.convert_to_tensor'
606:48: INFO: Added keywords to args of function 'tf.shape'
606:64: INFO: Added keywords to args of function 'tf.shape'
612:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
619:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
630:45: INFO: Added keywords to args of function 'tf.convert_to_tensor'
630:67: INFO: Added keywords to args of function 'tf.shape'
638:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
675:10: INFO: Added keywords to args of function 'tf.pad'
684:11: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
700:11: INFO: Changed tf.image.resize_nearest_neighbor call to tf.image.resize(..., method=tf.image.ResizeMethod.NEAREST_NEIGHBOR).
735:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
738:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
739:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
746:29: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
761:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
767:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
791:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
826:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
828:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
828:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
829:36: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
829:36: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
830:15: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
830:15: INFO: Renamed keyword argument for tf.nn.depthwise_conv2d from rate to dilations
835:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
882:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
885:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
886:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
893:29: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
908:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
914:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/test/test_kitti_depth.py'
 outputting to 'srcv2/test/test_kitti_depth.py'
--------------------------------------------------------------------------------

32:11: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
35:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
35:27: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
43:19: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
45:26: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
52:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
59:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
59:29: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
83:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/test/__init__.py'
 outputting to 'srcv2/test/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/model/model_3frames_origin.py'
 outputting to 'srcv2/model/model_3frames_origin.py'
--------------------------------------------------------------------------------

71:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
71:44: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
78:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
97:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
97:44: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
110:55: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
110:55: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
125:54: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
125:54: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
156:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
156:44: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
181:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
181:48: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
259:29: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
261:35: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
270:34: INFO: Added keywords to args of function 'tf.reduce_mean'
275:40: INFO: Added keywords to args of function 'tf.reduce_mean'
281:34: INFO: Added keywords to args of function 'tf.reduce_mean'
286:34: INFO: Added keywords to args of function 'tf.reduce_mean'
292:34: INFO: Added keywords to args of function 'tf.reduce_mean'
297:40: INFO: Added keywords to args of function 'tf.reduce_mean'
302:29: INFO: Added keywords to args of function 'tf.reduce_mean'
306:35: INFO: Added keywords to args of function 'tf.reduce_mean'
311:29: INFO: Added keywords to args of function 'tf.reduce_mean'
315:29: INFO: Added keywords to args of function 'tf.reduce_mean'
320:29: INFO: Added keywords to args of function 'tf.reduce_mean'
324:35: INFO: Added keywords to args of function 'tf.reduce_mean'
364:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
364:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
365:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
365:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
366:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
366:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
367:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
367:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
368:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
368:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
369:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
369:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
370:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
370:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
373:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
373:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
376:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
376:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
379:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
379:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
380:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
380:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
381:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
381:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
382:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
382:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
383:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
383:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
384:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
384:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
386:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
386:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
387:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
387:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
388:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
388:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
389:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
389:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
390:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
390:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
391:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
391:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
393:23: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
393:23: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
463:44: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
463:44: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
465:50: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
465:50: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
539:38: INFO: Added keywords to args of function 'tf.reduce_mean'
540:44: INFO: Added keywords to args of function 'tf.reduce_mean'
542:38: INFO: Added keywords to args of function 'tf.reduce_mean'
543:38: INFO: Added keywords to args of function 'tf.reduce_mean'
545:44: INFO: Added keywords to args of function 'tf.reduce_mean'
546:38: INFO: Added keywords to args of function 'tf.reduce_mean'
550:33: INFO: Added keywords to args of function 'tf.reduce_mean'
551:39: INFO: Added keywords to args of function 'tf.reduce_mean'
553:33: INFO: Added keywords to args of function 'tf.reduce_mean'
554:33: INFO: Added keywords to args of function 'tf.reduce_mean'
556:39: INFO: Added keywords to args of function 'tf.reduce_mean'
557:33: INFO: Added keywords to args of function 'tf.reduce_mean'
562:36: INFO: Added keywords to args of function 'tf.reduce_mean'
564:37: INFO: Added keywords to args of function 'tf.reduce_mean'
566:37: INFO: Added keywords to args of function 'tf.reduce_mean'
601:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
601:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
602:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
602:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
603:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
603:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
604:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
604:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
605:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
605:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
606:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
606:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
609:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
609:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
612:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
612:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
614:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
614:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
616:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
616:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
617:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
617:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
625:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
625:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
626:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
626:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
627:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
627:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
628:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
628:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
629:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
629:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
630:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
630:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
634:16: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
634:16: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
636:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
636:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
637:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
637:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
638:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
638:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
640:23: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
640:23: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
651:20: INFO: Added keywords to args of function 'tf.reduce_mean'
673:24: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/model/undpflow_model.py'
 outputting to 'srcv2/model/undpflow_model.py'
--------------------------------------------------------------------------------

80:8: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
89:23: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

89:23: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
90:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
173:28: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
173:46: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
173:70: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
183:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
183:35: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
192:29: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

192:29: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
210:40: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
211:44: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
215:40: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
216:44: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
221:40: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
222:44: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
247:42: INFO: Added keywords to args of function 'tf.reduce_sum'
247:57: INFO: Added keywords to args of function 'tf.reduce_prod'
247:72: INFO: Added keywords to args of function 'tf.shape'
248:42: INFO: Added keywords to args of function 'tf.reduce_sum'
248:57: INFO: Added keywords to args of function 'tf.reduce_prod'
248:72: INFO: Added keywords to args of function 'tf.shape'
249:41: INFO: Added keywords to args of function 'tf.reduce_sum'
249:56: INFO: Added keywords to args of function 'tf.reduce_prod'
249:71: INFO: Added keywords to args of function 'tf.shape'
250:41: INFO: Added keywords to args of function 'tf.reduce_sum'
250:56: INFO: Added keywords to args of function 'tf.reduce_prod'
250:71: INFO: Added keywords to args of function 'tf.shape'
257:44: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
257:62: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
270:25: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
270:43: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
275:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
278:25: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
278:25: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
281:21: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
283:19: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
285:29: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
285:29: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
288:21: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
289:21: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
299:24: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
304:33: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
305:24: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
306:28: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
312:33: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
314:32: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
314:50: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
316:32: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
317:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
326:12: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
366:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/model/__init__.py'
 outputting to 'srcv2/model/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/model/model_3frames.py'
 outputting to 'srcv2/model/model_3frames.py'
--------------------------------------------------------------------------------

72:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
72:44: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
79:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
101:24: INFO: Added keywords to args of function 'tf.reduce_mean'
105:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
105:44: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
118:55: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
118:55: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
133:54: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
133:54: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
214:29: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
216:35: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
225:34: INFO: Added keywords to args of function 'tf.reduce_mean'
230:40: INFO: Added keywords to args of function 'tf.reduce_mean'
236:34: INFO: Added keywords to args of function 'tf.reduce_mean'
241:34: INFO: Added keywords to args of function 'tf.reduce_mean'
247:34: INFO: Added keywords to args of function 'tf.reduce_mean'
252:40: INFO: Added keywords to args of function 'tf.reduce_mean'
257:29: INFO: Added keywords to args of function 'tf.reduce_mean'
261:35: INFO: Added keywords to args of function 'tf.reduce_mean'
266:29: INFO: Added keywords to args of function 'tf.reduce_mean'
270:29: INFO: Added keywords to args of function 'tf.reduce_mean'
275:29: INFO: Added keywords to args of function 'tf.reduce_mean'
279:35: INFO: Added keywords to args of function 'tf.reduce_mean'
319:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
319:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
320:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
320:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
321:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
321:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
322:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
322:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
323:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
323:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
324:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
324:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
325:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
325:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
328:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
328:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
331:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
331:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
334:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
334:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
335:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
335:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
336:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
336:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
337:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
337:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
338:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
338:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
339:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
339:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
341:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
341:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
342:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
342:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
343:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
343:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
344:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
344:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
345:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
345:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
346:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
346:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
348:23: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
348:23: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
418:44: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
418:44: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
420:50: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
420:50: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
494:38: INFO: Added keywords to args of function 'tf.reduce_mean'
495:44: INFO: Added keywords to args of function 'tf.reduce_mean'
497:38: INFO: Added keywords to args of function 'tf.reduce_mean'
498:38: INFO: Added keywords to args of function 'tf.reduce_mean'
500:44: INFO: Added keywords to args of function 'tf.reduce_mean'
501:38: INFO: Added keywords to args of function 'tf.reduce_mean'
505:33: INFO: Added keywords to args of function 'tf.reduce_mean'
506:39: INFO: Added keywords to args of function 'tf.reduce_mean'
508:33: INFO: Added keywords to args of function 'tf.reduce_mean'
509:33: INFO: Added keywords to args of function 'tf.reduce_mean'
511:39: INFO: Added keywords to args of function 'tf.reduce_mean'
512:33: INFO: Added keywords to args of function 'tf.reduce_mean'
517:36: INFO: Added keywords to args of function 'tf.reduce_mean'
519:37: INFO: Added keywords to args of function 'tf.reduce_mean'
521:37: INFO: Added keywords to args of function 'tf.reduce_mean'
556:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
556:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
557:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
557:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
558:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
558:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
559:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
559:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
560:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
560:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
561:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
561:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
564:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
564:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
567:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
567:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
569:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
569:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
571:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
571:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
572:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
572:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
580:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
580:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
581:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
581:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
582:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
582:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
583:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
583:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
584:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
584:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
585:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
585:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
589:16: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
589:16: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
591:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
591:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
592:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
592:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
593:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
593:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
595:23: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
595:23: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
615:24: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/model/model_5frames.py'
 outputting to 'srcv2/model/model_5frames.py'
--------------------------------------------------------------------------------

68:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
68:44: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
77:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
111:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
111:44: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
124:55: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
124:55: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
139:54: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
139:54: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
241:29: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
243:35: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
252:34: INFO: Added keywords to args of function 'tf.reduce_mean'
257:40: INFO: Added keywords to args of function 'tf.reduce_mean'
262:40: INFO: Added keywords to args of function 'tf.reduce_mean'
267:40: INFO: Added keywords to args of function 'tf.reduce_mean'
273:34: INFO: Added keywords to args of function 'tf.reduce_mean'
278:40: INFO: Added keywords to args of function 'tf.reduce_mean'
283:34: INFO: Added keywords to args of function 'tf.reduce_mean'
288:40: INFO: Added keywords to args of function 'tf.reduce_mean'
294:34: INFO: Added keywords to args of function 'tf.reduce_mean'
299:34: INFO: Added keywords to args of function 'tf.reduce_mean'
304:40: INFO: Added keywords to args of function 'tf.reduce_mean'
309:40: INFO: Added keywords to args of function 'tf.reduce_mean'
315:34: INFO: Added keywords to args of function 'tf.reduce_mean'
320:34: INFO: Added keywords to args of function 'tf.reduce_mean'
325:40: INFO: Added keywords to args of function 'tf.reduce_mean'
330:40: INFO: Added keywords to args of function 'tf.reduce_mean'
336:34: INFO: Added keywords to args of function 'tf.reduce_mean'
341:40: INFO: Added keywords to args of function 'tf.reduce_mean'
346:40: INFO: Added keywords to args of function 'tf.reduce_mean'
351:40: INFO: Added keywords to args of function 'tf.reduce_mean'
356:29: INFO: Added keywords to args of function 'tf.reduce_mean'
360:35: INFO: Added keywords to args of function 'tf.reduce_mean'
364:35: INFO: Added keywords to args of function 'tf.reduce_mean'
368:35: INFO: Added keywords to args of function 'tf.reduce_mean'
373:29: INFO: Added keywords to args of function 'tf.reduce_mean'
377:35: INFO: Added keywords to args of function 'tf.reduce_mean'
381:29: INFO: Added keywords to args of function 'tf.reduce_mean'
385:35: INFO: Added keywords to args of function 'tf.reduce_mean'
390:29: INFO: Added keywords to args of function 'tf.reduce_mean'
394:29: INFO: Added keywords to args of function 'tf.reduce_mean'
398:35: INFO: Added keywords to args of function 'tf.reduce_mean'
402:35: INFO: Added keywords to args of function 'tf.reduce_mean'
407:29: INFO: Added keywords to args of function 'tf.reduce_mean'
411:29: INFO: Added keywords to args of function 'tf.reduce_mean'
415:35: INFO: Added keywords to args of function 'tf.reduce_mean'
419:35: INFO: Added keywords to args of function 'tf.reduce_mean'
424:29: INFO: Added keywords to args of function 'tf.reduce_mean'
428:35: INFO: Added keywords to args of function 'tf.reduce_mean'
432:35: INFO: Added keywords to args of function 'tf.reduce_mean'
436:35: INFO: Added keywords to args of function 'tf.reduce_mean'
517:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
517:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
518:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
518:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
519:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
519:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
520:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
520:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
521:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
521:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
522:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
522:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
523:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
523:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
526:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
526:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
529:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
529:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
531:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
531:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
532:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
532:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
533:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
533:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
534:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
534:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
535:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
535:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
536:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
536:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
537:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
537:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
550:23: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
550:23: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
617:44: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
617:44: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
619:50: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
619:50: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
811:44: INFO: Added keywords to args of function 'tf.reduce_mean'
812:44: INFO: Added keywords to args of function 'tf.reduce_mean'
813:44: INFO: Added keywords to args of function 'tf.reduce_mean'
814:44: INFO: Added keywords to args of function 'tf.reduce_mean'
816:44: INFO: Added keywords to args of function 'tf.reduce_mean'
817:44: INFO: Added keywords to args of function 'tf.reduce_mean'
818:44: INFO: Added keywords to args of function 'tf.reduce_mean'
819:44: INFO: Added keywords to args of function 'tf.reduce_mean'
821:44: INFO: Added keywords to args of function 'tf.reduce_mean'
822:44: INFO: Added keywords to args of function 'tf.reduce_mean'
823:44: INFO: Added keywords to args of function 'tf.reduce_mean'
824:44: INFO: Added keywords to args of function 'tf.reduce_mean'
826:44: INFO: Added keywords to args of function 'tf.reduce_mean'
827:44: INFO: Added keywords to args of function 'tf.reduce_mean'
828:44: INFO: Added keywords to args of function 'tf.reduce_mean'
829:44: INFO: Added keywords to args of function 'tf.reduce_mean'
831:44: INFO: Added keywords to args of function 'tf.reduce_mean'
832:44: INFO: Added keywords to args of function 'tf.reduce_mean'
833:44: INFO: Added keywords to args of function 'tf.reduce_mean'
834:44: INFO: Added keywords to args of function 'tf.reduce_mean'
838:39: INFO: Added keywords to args of function 'tf.reduce_mean'
839:39: INFO: Added keywords to args of function 'tf.reduce_mean'
840:39: INFO: Added keywords to args of function 'tf.reduce_mean'
841:39: INFO: Added keywords to args of function 'tf.reduce_mean'
843:39: INFO: Added keywords to args of function 'tf.reduce_mean'
844:39: INFO: Added keywords to args of function 'tf.reduce_mean'
845:39: INFO: Added keywords to args of function 'tf.reduce_mean'
846:39: INFO: Added keywords to args of function 'tf.reduce_mean'
848:39: INFO: Added keywords to args of function 'tf.reduce_mean'
849:39: INFO: Added keywords to args of function 'tf.reduce_mean'
850:39: INFO: Added keywords to args of function 'tf.reduce_mean'
851:39: INFO: Added keywords to args of function 'tf.reduce_mean'
853:39: INFO: Added keywords to args of function 'tf.reduce_mean'
854:39: INFO: Added keywords to args of function 'tf.reduce_mean'
855:39: INFO: Added keywords to args of function 'tf.reduce_mean'
856:39: INFO: Added keywords to args of function 'tf.reduce_mean'
858:39: INFO: Added keywords to args of function 'tf.reduce_mean'
859:39: INFO: Added keywords to args of function 'tf.reduce_mean'
860:39: INFO: Added keywords to args of function 'tf.reduce_mean'
861:39: INFO: Added keywords to args of function 'tf.reduce_mean'
866:36: INFO: Added keywords to args of function 'tf.reduce_mean'
868:37: INFO: Added keywords to args of function 'tf.reduce_mean'
870:37: INFO: Added keywords to args of function 'tf.reduce_mean'
872:37: INFO: Added keywords to args of function 'tf.reduce_mean'
874:37: INFO: Added keywords to args of function 'tf.reduce_mean'
909:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
909:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
910:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
910:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
911:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
911:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
912:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
912:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
913:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
913:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
914:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
914:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
917:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
917:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
920:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
920:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
922:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
922:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
923:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
923:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
924:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
924:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
925:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
925:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
926:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
926:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
928:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
928:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
929:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
929:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
930:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
930:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
931:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
931:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
932:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
932:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
933:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
933:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
934:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
934:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
938:16: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
938:16: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
940:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
940:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
941:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
941:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
942:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
942:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
943:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
943:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
944:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
944:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
946:23: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
946:23: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
951:20: INFO: Added keywords to args of function 'tf.reduce_mean'
972:24: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/model/.ipynb_checkpoints/model_3frames-checkpoint.py'
 outputting to 'srcv2/model/.ipynb_checkpoints/model_3frames-checkpoint.py'
--------------------------------------------------------------------------------

72:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
72:44: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
79:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
101:24: INFO: Added keywords to args of function 'tf.reduce_mean'
105:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
105:44: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
118:55: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
118:55: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
133:54: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
133:54: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
214:29: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
216:35: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
225:34: INFO: Added keywords to args of function 'tf.reduce_mean'
230:40: INFO: Added keywords to args of function 'tf.reduce_mean'
236:34: INFO: Added keywords to args of function 'tf.reduce_mean'
241:34: INFO: Added keywords to args of function 'tf.reduce_mean'
247:34: INFO: Added keywords to args of function 'tf.reduce_mean'
252:40: INFO: Added keywords to args of function 'tf.reduce_mean'
257:29: INFO: Added keywords to args of function 'tf.reduce_mean'
261:35: INFO: Added keywords to args of function 'tf.reduce_mean'
266:29: INFO: Added keywords to args of function 'tf.reduce_mean'
270:29: INFO: Added keywords to args of function 'tf.reduce_mean'
275:29: INFO: Added keywords to args of function 'tf.reduce_mean'
279:35: INFO: Added keywords to args of function 'tf.reduce_mean'
319:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
319:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
320:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
320:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
321:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
321:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
322:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
322:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
323:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
323:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
324:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
324:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
325:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
325:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
328:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
328:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
331:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
331:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
334:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
334:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
335:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
335:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
336:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
336:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
337:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
337:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
338:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
338:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
339:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
339:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
341:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
341:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
342:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
342:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
343:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
343:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
344:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
344:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
345:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
345:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
346:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
346:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
348:23: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
348:23: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
418:44: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
418:44: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
420:50: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
420:50: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
494:38: INFO: Added keywords to args of function 'tf.reduce_mean'
495:44: INFO: Added keywords to args of function 'tf.reduce_mean'
497:38: INFO: Added keywords to args of function 'tf.reduce_mean'
498:38: INFO: Added keywords to args of function 'tf.reduce_mean'
500:44: INFO: Added keywords to args of function 'tf.reduce_mean'
501:38: INFO: Added keywords to args of function 'tf.reduce_mean'
505:33: INFO: Added keywords to args of function 'tf.reduce_mean'
506:39: INFO: Added keywords to args of function 'tf.reduce_mean'
508:33: INFO: Added keywords to args of function 'tf.reduce_mean'
509:33: INFO: Added keywords to args of function 'tf.reduce_mean'
511:39: INFO: Added keywords to args of function 'tf.reduce_mean'
512:33: INFO: Added keywords to args of function 'tf.reduce_mean'
517:36: INFO: Added keywords to args of function 'tf.reduce_mean'
519:37: INFO: Added keywords to args of function 'tf.reduce_mean'
521:37: INFO: Added keywords to args of function 'tf.reduce_mean'
556:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
556:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
557:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
557:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
558:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
558:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
559:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
559:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
560:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
560:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
561:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
561:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
564:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
564:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
567:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
567:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
569:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
569:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
571:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
571:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
572:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
572:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
580:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
580:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
581:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
581:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
582:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
582:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
583:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
583:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
584:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
584:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
585:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
585:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
589:16: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
589:16: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
591:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
591:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
592:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
592:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
593:8: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
593:8: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
595:23: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
595:23: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
615:24: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/model/.ipynb_checkpoints/undpflow_model-checkpoint.py'
 outputting to 'srcv2/model/.ipynb_checkpoints/undpflow_model-checkpoint.py'
--------------------------------------------------------------------------------

80:8: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
89:23: INFO: tf.train.exponential_decay requires manual check. To use learning rate decay schedules with TensorFlow 2.0, switch to the schedules in `tf.keras.optimizers.schedules`.

89:23: INFO: Renamed 'tf.train.exponential_decay' to 'tf.compat.v1.train.exponential_decay'
90:20: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
173:28: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
173:46: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
173:70: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
183:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
183:35: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
191:29: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

191:29: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
209:40: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
210:44: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
214:40: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
215:44: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
220:40: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
221:44: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
246:46: INFO: Added keywords to args of function 'tf.reduce_sum'
246:61: INFO: Added keywords to args of function 'tf.reduce_prod'
246:76: INFO: Added keywords to args of function 'tf.shape'
252:44: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
252:62: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
265:25: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
265:43: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
270:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
273:25: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
273:25: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
276:21: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
278:19: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
280:29: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
280:29: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
283:21: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
284:21: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
291:24: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
296:33: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
297:24: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
298:28: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
304:33: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
306:32: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
306:50: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
308:32: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
309:36: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
318:12: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
358:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/data_loader/data_loader.py'
 outputting to 'srcv2/data_loader/data_loader.py'
--------------------------------------------------------------------------------

48:28: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
52:26: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
58:21: INFO: Renamed 'tf.WholeFileReader' to 'tf.compat.v1.WholeFileReader'
69:49: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
75:49: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
84:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

84:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
85:29: INFO: Renamed 'tf.TextLineReader' to 'tf.compat.v1.TextLineReader'
90:30: INFO: Added keywords to args of function 'tf.decode_csv'
90:30: INFO: Renamed 'tf.decode_csv' to 'tf.io.decode_csv'
94:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

94:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
98:21: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

98:21: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
105:21: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

105:21: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
110:21: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

110:21: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
114:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

114:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
117:36: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
129:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

129:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
134:88: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
141:88: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
164:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
169:17: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
180:51: INFO: Added keywords to args of function 'tf.shape'
181:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
182:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
198:27: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
202:32: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
206:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
291:23: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
298:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

298:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
317:35: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
319:26: INFO: Added keywords to args of function 'tf.cond'
325:33: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
327:26: INFO: Added keywords to args of function 'tf.cond'
333:35: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
335:26: INFO: Added keywords to args of function 'tf.cond'
341:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
343:26: INFO: Added keywords to args of function 'tf.cond'
365:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
367:19: INFO: Added keywords to args of function 'tf.cond'
380:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
387:17: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
400:39: INFO: Added keywords to args of function 'tf.shape'
401:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
402:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
475:28: INFO: Renamed 'tf.train.string_input_producer' to 'tf.compat.v1.train.string_input_producer'
481:21: INFO: Renamed 'tf.WholeFileReader' to 'tf.compat.v1.WholeFileReader'
492:49: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
498:49: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
537:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

537:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
549:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

549:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
569:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

569:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
572:36: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
584:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

584:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
589:88: INFO: Renamed 'tf.train.shuffle_batch' to 'tf.compat.v1.train.shuffle_batch'
596:88: INFO: Renamed 'tf.train.batch' to 'tf.compat.v1.train.batch'
619:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
624:17: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
635:51: INFO: Added keywords to args of function 'tf.shape'
636:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
637:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
653:27: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
657:32: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
661:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
746:23: INFO: Renamed 'tf.matrix_inverse' to 'tf.linalg.inv'
753:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

753:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
772:35: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
774:26: INFO: Added keywords to args of function 'tf.cond'
780:33: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
782:26: INFO: Added keywords to args of function 'tf.cond'
788:35: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
790:26: INFO: Added keywords to args of function 'tf.cond'
796:28: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
798:26: INFO: Added keywords to args of function 'tf.cond'
820:19: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
822:19: INFO: Added keywords to args of function 'tf.cond'
835:22: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
842:17: INFO: Changed tf.image.resize_area call to tf.image.resize(..., method=tf.image.ResizeMethod.AREA).
855:39: INFO: Added keywords to args of function 'tf.shape'
856:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
857:23: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/data_loader/__init__.py'
 outputting to 'srcv2/data_loader/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/data_loader/test_data_loader.py'
 outputting to 'srcv2/data_loader/test_data_loader.py'
--------------------------------------------------------------------------------

17:20: INFO: Renamed 'tf.string_join' to 'tf.strings.join'
18:35: INFO: Renamed 'tf.read_file' to 'tf.io.read_file'
29:20: INFO: Added keywords to args of function 'tf.convert_to_tensor'
32:32: ERROR: Using member tf.contrib.data.batch_and_drop_remainder in deprecated module tf.contrib. tf.contrib.data.batch_and_drop_remainder cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
34:19: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------

